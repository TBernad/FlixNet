{"ast":null,"code":"var _jsxFileName = \"/home/tbernad/Projets/tuto/flixnet/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Row from \"./Components/Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Components/Banner\";\nimport Nav from \"./Components/Nav\";\nimport MovieList from \"./Components/MovieList\";\nimport addFav from \"./Components/addFav\";\nimport FavList from \"./Components/FavList\";\nimport RemoveFav from \"./Components/removeFav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [favourites, setFavourites] = useState([]);\n\n  const addFavouriteMovie = movie => {\n    let x = 0;\n    favourites.forEach(fav => {\n      let id = fav.imdbID;\n\n      if (id === movie.imdbID) {\n        x = 1;\n      }\n    });\n\n    if (x === 0) {\n      const newFavouriteList = [...favourites, movie];\n      setFavourites(newFavouriteList);\n      saveToLocalStorage(newFavouriteList);\n    }\n  };\n\n  const RemoveFavouriteMovie = movie => {\n    const newFavouriteList = favourites.filter(favourite => favourite.imdbID !== movie.imdbID);\n    setFavourites(newFavouriteList);\n  };\n\n  const saveToLocalStorage = items => {\n    localStorage.setItem(\"flixnet-favourites\", JSON.stringify(items));\n  };\n\n  useEffect(() => {\n    const movieFavourites = JSON.parse(localStorage.getItem(\"flixnet-favourites\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      title: \"Netflix Originals\",\n      fetchUrl: requests.fetchNetflixOriginals,\n      isLargeRow: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      title: \"Trending Now\",\n      fetchUrl: requests.fetchTrending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      title: \"Top Rated\",\n      fetchUrl: requests.fetchTopRated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      title: \"Action Movies\",\n      fetchUrl: requests.fetchActionMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      title: \"Comedy Movies\",\n      fetchUrl: requests.fetchComedyMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      title: \"Horror Movies\",\n      fetchUrl: requests.fetchHorrorMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      title: \"Romance Movies\",\n      fetchUrl: requests.fetchRomanceMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      title: \"Documentaries\",\n      fetchUrl: requests.fetchDocumentaries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      handleFavouritesClick: addFavouriteMovie,\n      favouriteComponent: addFav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FavList, {\n      movies: favourites,\n      handleFavouritesClick: RemoveFavouriteMovie,\n      favouriteComponent: RemoveFav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1BMh53p4p9X8Q6iJFk4RO+dhGbQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/tbernad/Projets/tuto/flixnet/src/App.js"],"names":["React","useState","Row","requests","Banner","Nav","MovieList","addFav","FavList","RemoveFav","App","favourites","setFavourites","addFavouriteMovie","movie","x","forEach","fav","id","imdbID","newFavouriteList","saveToLocalStorage","RemoveFavouriteMovie","filter","favourite","items","localStorage","setItem","JSON","stringify","useEffect","movieFavourites","parse","getItem","fetchNetflixOriginals","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Row from \"./Components/Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Components/Banner\";\nimport Nav from \"./Components/Nav\";\nimport MovieList from \"./Components/MovieList\";\nimport addFav from \"./Components/addFav\";\nimport FavList from \"./Components/FavList\";\nimport RemoveFav from \"./Components/removeFav\";\n\nfunction App() {\n  const [favourites, setFavourites] = useState([]);\n\n  const addFavouriteMovie = (movie) => {\n    let x = 0;\n    favourites.forEach((fav) => {\n      let id = fav.imdbID;\n      if (id === movie.imdbID) {\n        x = 1;\n      }\n    });\n    if (x === 0) {\n      const newFavouriteList = [...favourites, movie];\n      setFavourites(newFavouriteList);\n      saveToLocalStorage(newFavouriteList);\n    }\n  };\n\n  const RemoveFavouriteMovie = (movie) => {\n    const newFavouriteList = favourites.filter(\n      (favourite) => favourite.imdbID !== movie.imdbID\n    );\n    setFavourites(newFavouriteList);\n  };\n\n  const saveToLocalStorage = (items) => {\n    localStorage.setItem(\"flixnet-favourites\", JSON.stringify(items));\n  };\n\n  useEffect(() => {\n    const movieFavourites = JSON.parse(\n      localStorage.getItem(\"flixnet-favourites\")\n    );\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Nav></Nav>\n      <Banner></Banner>\n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n      <MovieList\n        handleFavouritesClick={addFavouriteMovie}\n        favouriteComponent={addFav}\n      />\n      <FavList\n        movies={favourites}\n        handleFavouritesClick={RemoveFavouriteMovie}\n        favouriteComponent={RemoveFav}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}