{"ast":null,"code":"import _toConsumableArray from\"/home/tbernad/Projets/flixnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/tbernad/Projets/flixnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"./App.css\";import\"bootstrap/dist/css/bootstrap.min.css\";import Row from\"./Components/Row\";import requests from\"./requests\";import Banner from\"./Components/Banner\";import Nav from\"./Components/Nav\";import MovieList from\"./Components/MovieList\";import addFav from\"./Components/addFav\";import FavList from\"./Components/FavList\";import RemoveFav from\"./Components/removeFav\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),favourites=_useState2[0],setFavourites=_useState2[1];var addFavouriteMovie=function addFavouriteMovie(movie){var x=0;favourites.forEach(function(fav){var id=fav.imdbID;if(id===movie.imdbID){x=1;}});if(x===0){var newFavouriteList=[].concat(_toConsumableArray(favourites),[movie]);setFavourites(newFavouriteList);saveToLocalStorage(newFavouriteList);}};var RemoveFavouriteMovie=function RemoveFavouriteMovie(movie){var newFavouriteList=favourites.filter(function(favourite){return favourite.imdbID!==movie.imdbID;});setFavourites(newFavouriteList);saveToLocalStorage(newFavouriteList);};var saveToLocalStorage=function saveToLocalStorage(items){localStorage.setItem(\"flixnet-favourites\",JSON.stringify(items));};useEffect(function(){var movieFavourites=JSON.parse(localStorage.getItem(\"flixnet-favourites\"));setFavourites(movieFavourites);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(Nav,{}),/*#__PURE__*/_jsx(Banner,{}),/*#__PURE__*/_jsx(Row,{title:\"Netflix Originals\",fetchUrl:requests.fetchNetflixOriginals,isLargeRow:true}),/*#__PURE__*/_jsx(Row,{title:\"Trending Now\",fetchUrl:requests.fetchTrending}),/*#__PURE__*/_jsx(Row,{title:\"Top Rated\",fetchUrl:requests.fetchTopRated}),/*#__PURE__*/_jsx(Row,{title:\"Action Movies\",fetchUrl:requests.fetchActionMovies}),/*#__PURE__*/_jsx(Row,{title:\"Comedy Movies\",fetchUrl:requests.fetchComedyMovies}),/*#__PURE__*/_jsx(Row,{title:\"Horror Movies\",fetchUrl:requests.fetchHorrorMovies}),/*#__PURE__*/_jsx(Row,{title:\"Romance Movies\",fetchUrl:requests.fetchRomanceMovies}),/*#__PURE__*/_jsx(Row,{title:\"Documentaries\",fetchUrl:requests.fetchDocumentaries}),/*#__PURE__*/_jsx(MovieList,{handleFavouritesClick:addFavouriteMovie,favouriteComponent:addFav}),/*#__PURE__*/_jsx(FavList,{movies:favourites,handleFavouritesClick:RemoveFavouriteMovie,favouriteComponent:RemoveFav})]});}export default App;","map":{"version":3,"sources":["/home/tbernad/Projets/flixnet/src/App.js"],"names":["React","useState","useEffect","Row","requests","Banner","Nav","MovieList","addFav","FavList","RemoveFav","App","favourites","setFavourites","addFavouriteMovie","movie","x","forEach","fav","id","imdbID","newFavouriteList","saveToLocalStorage","RemoveFavouriteMovie","filter","favourite","items","localStorage","setItem","JSON","stringify","movieFavourites","parse","getItem","fetchNetflixOriginals","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Row from \"./Components/Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Components/Banner\";\nimport Nav from \"./Components/Nav\";\nimport MovieList from \"./Components/MovieList\";\nimport addFav from \"./Components/addFav\";\nimport FavList from \"./Components/FavList\";\nimport RemoveFav from \"./Components/removeFav\";\n\nfunction App() {\n  const [favourites, setFavourites] = useState([]);\n\n  const addFavouriteMovie = (movie) => {\n    let x = 0;\n    favourites.forEach((fav) => {\n      let id = fav.imdbID;\n      if (id === movie.imdbID) {\n        x = 1;\n      }\n    });\n    if (x === 0) {\n      const newFavouriteList = [...favourites, movie];\n      setFavourites(newFavouriteList);\n      saveToLocalStorage(newFavouriteList);\n    }\n  };\n\n  const RemoveFavouriteMovie = (movie) => {\n    const newFavouriteList = favourites.filter(\n      (favourite) => favourite.imdbID !== movie.imdbID\n    );\n    setFavourites(newFavouriteList);\n    saveToLocalStorage(newFavouriteList);\n  };\n\n  const saveToLocalStorage = (items) => {\n    localStorage.setItem(\"flixnet-favourites\", JSON.stringify(items));\n  };\n\n  useEffect(() => {\n    const movieFavourites = JSON.parse(\n      localStorage.getItem(\"flixnet-favourites\")\n    );\n    setFavourites(movieFavourites);\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Nav></Nav>\n      <Banner></Banner>\n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n      <MovieList\n        handleFavouritesClick={addFavouriteMovie}\n        favouriteComponent={addFav}\n      />\n      <FavList\n        movies={favourites}\n        handleFavouritesClick={RemoveFavouriteMovie}\n        favouriteComponent={RemoveFav}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}