{"ast":null,"code":"import _regeneratorRuntime from\"/home/tbernad/Projets/flixnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/tbernad/Projets/flixnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/tbernad/Projets/flixnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import axios from\"../axios\";import\"./Row.css\";import Youtube from\"react-youtube\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var base_url=\"https://image.tmdb.org/t/p/original/\";function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,isLargeRow=_ref.isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailerUrl=_useState4[1];//runs the code when the row is loaded\n//if whe let [], it will only runs once, wont run again\n//else, whe can add a dependencie to rerun it\nuseEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);var opts={height:\"390\",width:\"100%\",playerVars:{autoplay:1}};var handleClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(movie){var _trailerurl$data$resu,trailerurl;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!trailerUrl){_context2.next=4;break;}setTrailerUrl(\"\");_context2.next=8;break;case 4:_context2.next=6;return axios.get(\"/movie/\".concat(movie.id,\"/videos?api_key=4c67d442117ece33a733970f4007006d\"));case 6:trailerurl=_context2.sent;setTrailerUrl((_trailerurl$data$resu=trailerurl.data.results[0])===null||_trailerurl$data$resu===void 0?void 0:_trailerurl$data$resu.key);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function handleClick(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row_posters\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{className:\"\".concat(isLargeRow?\"row_posterLarge\":\"row_poster\"),src:\"\".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name,onClick:function onClick(){return handleClick(movie);}},movie.id);})}),trailerUrl&&/*#__PURE__*/_jsx(Youtube,{videoId:trailerUrl,opts:opts})]});}export default Row;","map":{"version":3,"sources":["/home/tbernad/Projets/flixnet/src/Components/Row.js"],"names":["React","useEffect","useState","axios","Youtube","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","get","request","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","id","trailerurl","key","map","poster_path","backdrop_path","name"],"mappings":"ybAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,sCAAjB,CAEA,QAASC,CAAAA,GAAT,MAA8C,IAA/BC,CAAAA,KAA+B,MAA/BA,KAA+B,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAdC,UAAc,MAAdA,UAAc,eAChBP,QAAQ,CAAC,EAAD,CADQ,wCACrCQ,MADqC,eAC7BC,SAD6B,8BAERT,QAAQ,CAAC,EAAD,CAFA,yCAErCU,UAFqC,eAEzBC,aAFyB,eAI5C;AACA;AACA;AACAZ,SAAS,CAAC,UAAM,SACCa,CAAAA,SADD,qIACd,qKACwBX,CAAAA,KAAK,CAACY,GAAN,CAAUP,QAAV,CADxB,QACQQ,OADR,eAEEL,SAAS,CAACK,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CAFF,gCAGSF,OAHT,wDADc,4CAMdF,SAAS,GACV,CAPQ,CAON,CAACN,QAAD,CAPM,CAAT,CASA,GAAMW,CAAAA,IAAI,CAAG,CACXC,MAAM,CAAE,KADG,CAEXC,KAAK,CAAE,MAFI,CAGXC,UAAU,CAAE,CACVC,QAAQ,CAAE,CADA,CAHD,CAAb,CAQA,GAAMC,CAAAA,WAAW,2FAAG,kBAAOC,KAAP,+JACdb,UADc,0BAEhBC,aAAa,CAAC,EAAD,CAAb,CAFgB,qDAIOV,CAAAA,KAAK,CAACY,GAAN,kBACXU,KAAK,CAACC,EADK,qDAJP,QAIZC,UAJY,gBAOhBd,aAAa,wBAACc,UAAU,CAACV,IAAX,CAAgBC,OAAhB,CAAwB,CAAxB,CAAD,gDAAC,sBAA4BU,GAA7B,CAAb,CAPgB,wDAAH,kBAAXJ,CAAAA,WAAW,6CAAjB,CAWA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,oBAAKjB,KAAL,EADF,cAGE,YAAK,SAAS,CAAC,aAAf,UACGG,MAAM,CAACmB,GAAP,CAAW,SAACJ,KAAD,qBACV,YACE,SAAS,WAAKhB,UAAU,CAAG,iBAAH,CAAuB,YAAtC,CADX,CAEE,GAAG,WAAKJ,QAAL,SACDI,UAAU,CAAGgB,KAAK,CAACK,WAAT,CAAuBL,KAAK,CAACM,aADtC,CAFL,CAKE,GAAG,CAAEN,KAAK,CAACO,IALb,CAOE,OAAO,CAAE,yBAAMR,CAAAA,WAAW,CAACC,KAAD,CAAjB,EAPX,EAMOA,KAAK,CAACC,EANb,CADU,EAAX,CADH,EAHF,CAgBGd,UAAU,eAAI,KAAC,OAAD,EAAS,OAAO,CAAEA,UAAlB,CAA8B,IAAI,CAAEO,IAApC,EAhBjB,GADF,CAoBD,CAED,cAAeb,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"../axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  //runs the code when the row is loaded\n  //if whe let [], it will only runs once, wont run again\n  //else, whe can add a dependencie to rerun it\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = async (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      let trailerurl = await axios.get(\n        `/movie/${movie.id}/videos?api_key=4c67d442117ece33a733970f4007006d`\n      );\n      setTrailerUrl(trailerurl.data.results[0]?.key);\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n\n      <div className=\"row_posters\">\n        {movies.map((movie) => (\n          <img\n            className={`${isLargeRow ? \"row_posterLarge\" : \"row_poster\"}`}\n            src={`${base_url}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n            key={movie.id}\n            onClick={() => handleClick(movie)}\n          />\n        ))}\n      </div>\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}